{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"D:\\\\Web Development 3\\\\backend\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\nvar Posts = function Posts(_ref) {\n  var getPosts = _ref.getPosts,\n    _ref$post = _ref.post,\n    posts = _ref$post.posts,\n    loading = _ref$post.loading;\n  useEffect(function () {\n    getPosts();\n  }, [getPosts]);\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"test\");\n};\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\nexport default connect(mapStateToProps, {\n  getPosts: getPosts\n})(Posts);","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPosts","Posts","_ref","_ref$post","post","posts","loading","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["D:/Web Development 3/backend/client/src/components/posts/Posts.js"],"sourcesContent":["import React, {Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts} from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts , post: { posts , loading }}) => {\r\n    useEffect(()=>{\r\n        getPosts();\r\n    }, [getPosts]);\r\n  return loading ? <Spinner/> :\r\n    <Fragment>\r\n        test\r\n    </Fragment>;\r\n};\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, {getPosts})(Posts);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,QAAQ,QAAO,oBAAoB;AAE5C,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAgD;EAAA,IAA1CF,QAAQ,GAAAE,IAAA,CAARF,QAAQ;IAAAG,SAAA,GAAAD,IAAA,CAAGE,IAAI;IAAIC,KAAK,GAAAF,SAAA,CAALE,KAAK;IAAGC,OAAO,GAAAH,SAAA,CAAPG,OAAO;EAC/CV,SAAS,CAAC,YAAI;IACVI,QAAQ,EAAE;EACd,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAChB,OAAOM,OAAO,gBAAGZ,KAAA,CAAAa,aAAA,CAACR,OAAO;IAAAS,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,gBACzBpB,KAAA,CAAAa,aAAA,CAACZ,QAAQ;IAAAa,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAEV,CAAW;AACf,CAAC;AAEDb,KAAK,CAACc,SAAS,GAAG;EACdf,QAAQ,EAAEH,SAAS,CAACmB,IAAI,CAACC,UAAU;EACnCb,IAAI,EAAEP,SAAS,CAACqB,MAAM,CAACD;AAC3B,CAAC;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,KAAK;EAAA,OAAK;IAC9BhB,IAAI,EAAEgB,KAAK,CAAChB;EAChB,CAAC;AAAA,CAAC;AAEF,eAAeN,OAAO,CAACqB,eAAe,EAAE;EAACnB,QAAQ,EAARA;AAAQ,CAAC,CAAC,CAACC,KAAK,CAAC"},"metadata":{},"sourceType":"module"}