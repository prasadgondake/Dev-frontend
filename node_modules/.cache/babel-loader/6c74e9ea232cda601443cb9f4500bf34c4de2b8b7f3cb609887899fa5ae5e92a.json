{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register User\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  // console.log(body);\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    ;\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["F:/Projects/DevConnector/frontend/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res=await axios.get('/api/auth');\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    }\r\n};\r\n\r\n//Register User\r\nexport const register = ({ name , email, password })=> async dispatch => {\r\n    const config  = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name , email , password});\r\n\r\n    try {\r\n      const res= await axios.post('/api/users' , body , config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors=err.response.data.errors;\r\n\r\n      if(errors){\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    }\r\n};\r\n\r\n// Login user\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    };\r\n  \r\n    const body = JSON.stringify({ email, password });\r\n    // console.log(body);\r\n  \r\n    try {\r\n      const res = await axios.post('/api/auth', body, config);\r\n  \r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n  \r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      };\r\n  \r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    }\r\n  };\r\n\r\n  //Logout / Clear Profile\r\n  export const logout = () => dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({ type: LOGOUT });\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}