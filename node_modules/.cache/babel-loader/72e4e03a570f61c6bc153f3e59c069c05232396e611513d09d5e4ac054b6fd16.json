{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types';\n\n//Get Posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add Like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Remove Like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete Post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add Post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Get Post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["F:/Projects/DevConnector/frontend/src/actions/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport{\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () =>async dispatch=>{\r\n    try{\r\n        const res=await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Add Like\r\nexport const addLike = id =>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Remove Like\r\nexport const removeLike = id =>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Delete Post\r\nexport const deletePost = id =>async dispatch=>{\r\n    try{\r\n        await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n        dispatch(setAlert('Post Removed' , 'success'));\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Add Post\r\nexport const addPost = formData =>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/posts' ,formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Post Created' , 'success'));\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Get Post\r\nexport const getPost = id =>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Add Comment\r\nexport const addComment = (postId , formData) =>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    };\r\n    try{\r\n        const res = await axios.post(`/api/posts/comment/${postId}` ,formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Comment Added' , 'success'));\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Delete Comment\r\nexport const deleteComment = (postId , commentId) =>async dispatch=>{\r\n    try{\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        });\r\n        dispatch(setAlert('Comment Removed' , 'success'));\r\n    } catch(err){\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText , status:err.response.status}\r\n        });\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}