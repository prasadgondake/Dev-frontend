{"ast":null,"code":"// import axios from 'axios';\n// import { setAlert } from './alert';\n// // import { setAlert} from './alert';\n\n// import {\n//     GET_PROFILE,\n//     GET_PROFILES,\n//     PROFILE_ERROR,\n//     UPDATE_PROFILE,\n//     CLEAR_PROFILE,\n//     ACCOUNT_DELETED,\n//     GET_REPOS,\n//     // NO_REPOS\n// } from './types';\n\n// //Get current users profile\n// export const getCurrentProfile=()=> async dispatch=>{\n//     try {\n//       const res= await axios.get('/api/profile/me');\n\n//       dispatch({\n//         type: GET_PROFILE,\n//         payload: res.data\n//       });\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText , status:err.response.status}\n//       });\n//     }\n// };\n\n// // Get all profiles\n// export const getProfiles=()=> async dispatch=>{\n//   dispatch({ type: CLEAR_PROFILE});\n//   try {\n//     const res= await axios.get('/api/profile');\n\n//     dispatch({\n//       type: GET_PROFILES,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// // Get profile by ID\n// export const getProfileById= userId=> async dispatch=>{\n//   try {\n//     const res= await axios.get(`/api/profile/user/${userId}`);\n\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// // Get Github repos\n// export const getGithubRepos=username=> async dispatch=>{\n//   try {\n//     const res= await axios.get(`/api/profile/github/${username}`);\n\n//     dispatch({\n//       type: GET_REPOS,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Create or update profile\n// export const createProfile = (formdata , history , edit=false)=> async dispatch=>{\n//   try {\n//     const config = {\n//       headers:{\n//         'Content-Type':'application/json'\n//       }\n//     }\n\n//     const res =await axios.post('/api/profile',formdata,config);\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created' , 'success'));\n\n//     if(!edit){\n//       history.push('/dashboard');\n//       // return <Navigate to='/dashboard'></Navigate>\n//     }\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     };\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Add Experience\n// export const addExperience = (formData , history)=>async dispatch=>{\n//   try {\n//     const config = {\n//       headers:{\n//         'Content-Type':'application/json'\n//       }\n//     }\n\n//     const res =await axios.put('/api/profile/experience',formData,config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Experience Added' , 'success'));\n\n//     history.push('/dashboard');   \n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     };\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Add Education\n// export const addEducation = (formData , history)=>async dispatch=>{\n//   try {\n//     const config = {\n//       headers:{\n//         'Content-Type':'application/json'\n//       }\n//     }\n\n//     const res =await axios.put('/api/profile/education', formData,config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Education Added' , 'success'));\n\n//     history.push('/dashboard');   \n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     };\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Delete experience\n// export const deleteExperience = id=> async dispatch=>{\n//   try{\n//     const res=await axios.delete(`api/profile/experience/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Experience Removed' , 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Delete education\n// export const deleteEducation = id=> async dispatch=>{\n//   try{\n//     const res=await axios.delete(`api/profile/education/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Education Removed' , 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n// };\n\n// //Delete account & profile\n// export const deleteAccount = () => async dispatch=>{\n//   if(window.confirm('Are you sure? This can NOT be undone')){\n//   try{\n//     await axios.delete('/api/profile');\n//     dispatch({type: CLEAR_PROFILE});\n//     dispatch({type: ACCOUNT_DELETED});\n\n//     dispatch(setAlert('Your account has been permanantly deleted'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText , status:err.response.status}\n//     });\n//   }\n//  }\n// };","map":{"version":3,"names":[],"sources":["D:/Web Development 3/backend/client/src/actions/profile.js"],"sourcesContent":["// import axios from 'axios';\r\n// import { setAlert } from './alert';\r\n// // import { setAlert} from './alert';\r\n\r\n// import {\r\n//     GET_PROFILE,\r\n//     GET_PROFILES,\r\n//     PROFILE_ERROR,\r\n//     UPDATE_PROFILE,\r\n//     CLEAR_PROFILE,\r\n//     ACCOUNT_DELETED,\r\n//     GET_REPOS,\r\n//     // NO_REPOS\r\n// } from './types';\r\n\r\n// //Get current users profile\r\n// export const getCurrentProfile=()=> async dispatch=>{\r\n//     try {\r\n//       const res= await axios.get('/api/profile/me');\r\n\r\n//       dispatch({\r\n//         type: GET_PROFILE,\r\n//         payload: res.data\r\n//       });\r\n//     } catch (err) {\r\n//       dispatch({\r\n//         type: PROFILE_ERROR,\r\n//         payload: { msg: err.response.statusText , status:err.response.status}\r\n//       });\r\n//     }\r\n// };\r\n\r\n// // Get all profiles\r\n// export const getProfiles=()=> async dispatch=>{\r\n//   dispatch({ type: CLEAR_PROFILE});\r\n//   try {\r\n//     const res= await axios.get('/api/profile');\r\n\r\n//     dispatch({\r\n//       type: GET_PROFILES,\r\n//       payload: res.data\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Get profile by ID\r\n// export const getProfileById= userId=> async dispatch=>{\r\n//   try {\r\n//     const res= await axios.get(`/api/profile/user/${userId}`);\r\n\r\n//     dispatch({\r\n//       type: GET_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // Get Github repos\r\n// export const getGithubRepos=username=> async dispatch=>{\r\n//   try {\r\n//     const res= await axios.get(`/api/profile/github/${username}`);\r\n\r\n//     dispatch({\r\n//       type: GET_REPOS,\r\n//       payload: res.data\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Create or update profile\r\n// export const createProfile = (formdata , history , edit=false)=> async dispatch=>{\r\n//   try {\r\n//     const config = {\r\n//       headers:{\r\n//         'Content-Type':'application/json'\r\n//       }\r\n//     }\r\n\r\n//     const res =await axios.post('/api/profile',formdata,config);\r\n//     dispatch({\r\n//       type: GET_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created' , 'success'));\r\n\r\n//     if(!edit){\r\n//       history.push('/dashboard');\r\n//       // return <Navigate to='/dashboard'></Navigate>\r\n//     }\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n\r\n//     if (errors) {\r\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     };\r\n\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Add Experience\r\n// export const addExperience = (formData , history)=>async dispatch=>{\r\n//   try {\r\n//     const config = {\r\n//       headers:{\r\n//         'Content-Type':'application/json'\r\n//       }\r\n//     }\r\n\r\n//     const res =await axios.put('/api/profile/experience',formData,config);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(setAlert('Experience Added' , 'success'));\r\n\r\n//     history.push('/dashboard');   \r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n\r\n//     if (errors) {\r\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     };\r\n\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Add Education\r\n// export const addEducation = (formData , history)=>async dispatch=>{\r\n//   try {\r\n//     const config = {\r\n//       headers:{\r\n//         'Content-Type':'application/json'\r\n//       }\r\n//     }\r\n\r\n//     const res =await axios.put('/api/profile/education', formData,config);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(setAlert('Education Added' , 'success'));\r\n    \r\n//     history.push('/dashboard');   \r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n\r\n//     if (errors) {\r\n//         errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     };\r\n\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Delete experience\r\n// export const deleteExperience = id=> async dispatch=>{\r\n//   try{\r\n//     const res=await axios.delete(`api/profile/experience/${id}`);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(setAlert('Experience Removed' , 'success'));\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Delete education\r\n// export const deleteEducation = id=> async dispatch=>{\r\n//   try{\r\n//     const res=await axios.delete(`api/profile/education/${id}`);\r\n//     dispatch({\r\n//       type: UPDATE_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(setAlert('Education Removed' , 'success'));\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n// };\r\n\r\n// //Delete account & profile\r\n// export const deleteAccount = () => async dispatch=>{\r\n//   if(window.confirm('Are you sure? This can NOT be undone')){\r\n//   try{\r\n//     await axios.delete('/api/profile');\r\n//     dispatch({type: CLEAR_PROFILE});\r\n//     dispatch({type: ACCOUNT_DELETED});\r\n\r\n//     dispatch(setAlert('Your account has been permanantly deleted'));\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText , status:err.response.status}\r\n//     });\r\n//   }\r\n//  }\r\n// };"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}